.. _advanceduses:

Advanced uses of MoviePy
--------------------------

These pages give a few tips, tricks, toughts and tutorials on MoviePy. You can read more about each feature in the documentation (docstring) of each function.


When should I use ``moviepy.editor`` ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Most examples in this tutorial use the submodule ``moviepy.editor``, but should *you* use it ?

MoviePy can be used in different ways: either directly *by hand* to edit one of your personal videos, or indirectly (used on a webserver, or by another library). In the first case you should use the module ``moviepy.editor``, like this: ::

    from moviepy.editor import * # imports everything, quick and dirty
    import moviepy.editor as mpy # then use mpy.VideoFileClip, etc.
    from moviepy.editor import VideoFileClip # just import what you need

With any of these lines, the ``moviepy.editor`` module will actually do a lot of work behind the curtain. It will fetch all the most common classes, functions and subpackages of MoviePy, initialize a PyGame session (if PyGame is installed) to be able to preview video clips, and implement some shortcuts, like adding the ``resize`` transformation to the clips. This way you can use ``clip.resize(width=240)`` instead of the longer ``clip.fx( resize, width=240)``. In short, ``moviepy.editor`` it provides all you need to play around and edit your videos.

However, ``moviepy.editor`` takes time to load (circa one second). So if all you need is one or two features inside another library, it is better to import directly what you need, it writes longer but runs way faster: ::
    
    from moviepy.video.io.VideoFileClip import VideoFileClip
    from moviepy.video.fx.resize import resize






Fast editing tricks with MoviePy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


A few words on Gifmaking
~~~~~~~~~~~~~~~~~~~~~~~~~~




Using transitions
~~~~~~~~~~~~~~~~~~~

To be written.


Using subtitles
~~~~~~~~~~~~~~~~

To be written.




